var searchIndex = {};
searchIndex["argon2rs"] = {"doc":"","items":[[3,"Argon2","argon2rs","Main entry point for running Argon2 on customized parameters (cf. note for `Argon2::new`).",null,null],[4,"ParamErr","","",null,null],[13,"TooFewPasses","","",0,null],[13,"TooFewLanes","","",0,null],[13,"TooManyLanes","","",0,null],[13,"MinKiB","","",0,null],[4,"Variant","","",null,null],[13,"Argon2d","","",1,null],[13,"Argon2i","","",1,null],[5,"argon2d_simple","","Convenience wrapper around Argon2d for the majority of use cases where only a password and salt are supplied. Note that a salt between 8 and 2^32 - 1 bytes must be provided.",null,null],[5,"argon2i_simple","","Convenience wrapper around Argon2i for the majority of use cases where only a password and salt are supplied. Note that a salt between 8 and 2^32 - 1 bytes must be provided.",null,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"paramerr"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"paramerr"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"paramerr"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"default","","Returns an `Argon2` set to default input parameters. See below for a description of these parameters.",2,{"inputs":[{"name":"variant"}],"output":{"name":"argon2"}}],[11,"new","","Use this to customize Argon2's time and memory cost parameters. Adjusting any of these will affect the value of the final hash result.",2,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"variant"}],"output":{"name":"result"}}],[11,"hash","","Runs the selected Argon2 variant over provided inputs, writing the final hash to the byte slice `out`. Note that the output length is assumed to be `out.len()` and must be between 4 and 2^32 - 1. The inputs are:",2,null],[11,"params","","Provides read-only access to `(variant, kibibytes, passes, lanes, version)`. The version should always be 0x13.",2,null],[0,"verifier","","",null,null],[3,"Encoded","argon2rs::verifier","Represents a single Argon2 hashing session. A hash session comprises of the hash algorithm parameters, salt, key, and data used to hash a given input.",null,null],[4,"DecodeError","","",null,null],[13,"ParseError","","Byte position of first parse error",3,null],[13,"InvalidParams","","Invalid Argon2 parameters given in encoding",3,null],[5,"constant_eq","","Compares two byte arrays for equality. Assumes that both are already of equal length.",null,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"decodeerror"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"decodeerror"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"decodeerror"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_u8","","Reconstruct a previous hash session from serialized bytes.",4,null],[11,"to_u8","","Serialize this hashing session into raw bytes that can later be recovered by `Encoded::from_u8`.",4,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"new","","Generates a new hashing session from password, salt, and other byte input.  Parameters are:",4,null],[11,"default2i","","Same as `Encoded::new`, but with the default Argon2i hash algorithm parameters.",4,null],[11,"default2d","","Same as `Encoded::new`, but with the default Argon2d hash algorithm parameters.",4,null],[11,"verify","","Verifies password input against the hash that was previously created in this hashing session.",4,null],[11,"params","","Provides read-only access to the Argon2 parameters of this hash.",4,null],[0,"defaults","argon2rs","",null,null],[17,"PASSES","argon2rs::defaults","",null,null],[17,"KIB","","",null,null],[17,"LANES","","Default level of parallelism.",null,null],[17,"LENGTH","","The size of Argon2's hash output is adjustable. This is the default length.",null,null]],"paths":[[4,"ParamErr"],[4,"Variant"],[3,"Argon2"],[4,"DecodeError"],[3,"Encoded"]]};
initSearch(searchIndex);
